name: Build check

on:
  push:
    branches:
      - 'master'
      - 'blumu/*'
      - 'wiblum/*'
    tags:
      - 'v*'


env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2

    # - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1

    - id: get_version
      uses: battila7/get-version-action@v2

    - run: echo ${{ steps.get_version.outputs.version }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Set version number
      shell: pwsh
      run: ./build/beforebuild.ps1 -releaseVersion ${{ steps.get_version.outputs.version-without-v }}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}


    - name: Publish build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-output
        path: latexdaemon/Release/*.exe

    - name: Choco pack
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: pack choco\latexdaemon.nuspec

    - name: Publish choco artifact
      uses: actions/upload-artifact@v2
      with:
        name: choco
        path: '*.nupkg'

    - name: Create Draft GitHub Release
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ format('LatexDaemon {0}', github.ref)}}
        draft: true
        prerelease: false

    - uses: actions/upload-release-asset@v1.0.1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: latexdaemon/Release/latexdaemon.exe
        asset_name: latexdaemon.exe
        asset_content_type: application/octet-stream


    - uses: actions/upload-release-asset@v1.0.1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ format('latexdaemon.{0}.nupkg', steps.get_version.outputs.version-without-v)}}
        asset_name: ${{ format('latexdaemon.{0}.nupkg', steps.get_version.outputs.version-without-v)}}
        asset_content_type: application/octet-stream

    # Push to chocolatey
    # https://docs.chocolatey.org/en-us/create/create-packages#push-your-package
    - name: Choco push
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: push ${{ format('latexdaemon.{0}.nupkg', steps.get_version.outputs.version-without-v)}} -s https://push.chocolatey.org/ --apikey=${{ secrets.CHOCO_KEY }}
